version: 1
disable_existing_loggers: False
formatters:
  standard:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

handlers:
  console:
    class: logging.StreamHandler
    formatter: standard

  # カスタムハンドラーを利用して server.log を管理
  timed_server_file:
    class: utils.custom_log_handler.CustomTimedRotatingFileHandler
    formatter: standard
    filename: /var/log/backend/server.log
    when: 'midnight'  # 日付が変わるタイミングでローテーション
    interval: 1       # 1日ごとに新しいファイルを作成
    backupCount: 7    # 古いログファイルを7日分保持
    encoding: utf-8   # 文字コードの設定
    delay: true
    level: INFO       # サーバーログのレベルをINFOに設定

  # error.log も同様の設定
  timed_error_file:
    class: utils.custom_log_handler.CustomTimedRotatingFileHandler
    formatter: standard
    filename: /var/log/backend/error.log
    when: 'midnight'
    interval: 1
    backupCount: 7
    encoding: utf-8
    delay: true
    level: ERROR      # エラーログのレベルをERRORに設定

  # debug.log を追加
  timed_debug_file:
    class: utils.custom_log_handler.CustomTimedRotatingFileHandler
    formatter: standard
    filename: /var/log/backend/debug.log
    when: 'midnight'  # 日付が変わるタイミングでローテーション
    interval: 1       # 1日ごとに新しいファイルを作成
    backupCount: 7    # 古いログファイルを7日分保持
    encoding: utf-8   # 文字コードの設定
    delay: true
    level: DEBUG      # デバッグログのレベルをDEBUGに設定

loggers:
  uvicorn:
    handlers: [console, timed_server_file, timed_error_file, timed_debug_file]
    level: INFO
    propagate: no

  uvicorn.error:
    handlers: [console, timed_server_file, timed_error_file]
    level: ERROR
    propagate: no

root:
  handlers: [console, timed_server_file, timed_error_file, timed_debug_file]
  level: DEBUG      # ルートロガーのレベルをDEBUGに設定
